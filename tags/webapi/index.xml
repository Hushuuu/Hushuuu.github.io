<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WebApi on The Site</title>
    <link>https://hushuuu.github.io/tags/webapi/</link>
    <description>Recent content in WebApi on The Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Aug 2023 15:27:57 +0800</lastBuildDate><atom:link href="https://hushuuu.github.io/tags/webapi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Net6Api資料綁定整理</title>
      <link>https://hushuuu.github.io/2023/08/07/net6api%E8%B3%87%E6%96%99%E7%B6%81%E5%AE%9A%E6%95%B4%E7%90%86/</link>
      <pubDate>Mon, 07 Aug 2023 15:27:57 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2023/08/07/net6api%E8%B3%87%E6%96%99%E7%B6%81%E5%AE%9A%E6%95%B4%E7%90%86/</guid>
      <description>前言 Net6在開發web api時，有時候會遇到後端沒接到值的情況
整理幾個常用的使用方法
主要內容 都以Post為例
自訂Data模型參數，預設是json的方式
//這兩種寫法相等 public string Post(A vm); public string Post([FromBody] A vm); //form-data public string Post([FromForm] A vm); //x-www-urlencoded需要特別加屬性 [Consumes(&amp;#34;application/x-www-form-urlencoded&amp;#34;)] public string Post([FromForm] A vm); 如果是用基本型別的參數的話有特別的情況
//預設是queryString 這兩種相等 public string Post(string str); public string Post([FromQuery] string str); //json **特別不同 public string Post([FromBody] string str); //在請求時必須只傳入&amp;#34;\&amp;#34;value\&amp;#34;&amp;#34; //因為net6 在model binding時使用Text.Json //如果試著反序列化就會拋錯 //失敗` The JSON value could not be converted to System.String.` JsonSerializer.Deserialize&amp;lt;string&amp;gt;(&amp;#34;{\&amp;#34;str\&amp;#34;:\&amp;#34;value\&amp;#34;}&amp;#34;); //正確 JsonSerializer.Deserialize&amp;lt;string&amp;gt;(&amp;#34;\&amp;#34;value\&amp;#34;&amp;#34;); //from-data&amp;amp;form-urlencoded方式和上面自訂型別的一樣 小結 除了參數少的QueryString直接寫多個參數</description>
    </item>
    
  </channel>
</rss>
