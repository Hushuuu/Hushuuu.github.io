<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on The Site</title>
    <link>https://hushuuu.github.io/tags/javascript/</link>
    <description>Recent content in Javascript on The Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Oct 2021 14:19:59 +0800</lastBuildDate><atom:link href="https://hushuuu.github.io/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Windowopen開新視窗並Post資料</title>
      <link>https://hushuuu.github.io/2021/10/04/windowopen%E9%96%8B%E6%96%B0%E8%A6%96%E7%AA%97%E4%B8%A6post%E8%B3%87%E6%96%99/</link>
      <pubDate>Mon, 04 Oct 2021 14:19:59 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2021/10/04/windowopen%E9%96%8B%E6%96%B0%E8%A6%96%E7%AA%97%E4%B8%A6post%E8%B3%87%E6%96%99/</guid>
      <description>前言 一般用window.open開窗傳遞參數常用get方式在url後方串接參數
若想用post方式，則在開窗前模擬form submit post
並在onsubmit前open。
主要內容 function openPostWindow(url, name, val1, val2) { var tempForm = document.createElement(&amp;#34;form&amp;#34;); tempForm.id = &amp;#34;tempForm1&amp;#34;; tempForm.method = &amp;#34;post&amp;#34;; tempForm.action = url; //url  tempForm.target = name; let hideInput = document.createElement(&amp;#34;input&amp;#34;); hideInput.type = &amp;#34;hidden&amp;#34;; hideInput.name = &amp;#34;val1&amp;#34;;//傳入引數名  hideInput.value = val1;//傳入資料  tempForm.appendChild(hideInput); let hideInput2 = document.createElement(&amp;#34;input&amp;#34;); hideInput2.type = &amp;#34;hidden&amp;#34;; hideInput2.name = &amp;#34;val2&amp;#34;; hideInput2.value = val2; tempForm.appendChild(hideInput2); tempForm.addEventListener(&amp;#39;onsubmit&amp;#39;, function () { openWindow(name);}) document.body.appendChild(tempForm); //手動submit form  tempForm.</description>
    </item>
    
    <item>
      <title>MVC-上傳檔案轉為Base64String</title>
      <link>https://hushuuu.github.io/2021/03/25/mvc-%E4%B8%8A%E5%82%B3%E6%AA%94%E6%A1%88%E8%BD%89%E7%82%BAbase64string/</link>
      <pubDate>Thu, 25 Mar 2021 11:15:44 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2021/03/25/mvc-%E4%B8%8A%E5%82%B3%E6%AA%94%E6%A1%88%E8%BD%89%E7%82%BAbase64string/</guid>
      <description>前言 Html的Img標籤可以將src設為轉換後的Base64 String也可以顯示出圖片
若WebApi需要交流檔案也可以將檔案轉換為Base64進行溝通
Post前轉換 建立一個按鈕事件將轉換後的base64String Post至後端
$(document).on(&amp;#39;click&amp;#39;, &amp;#39;#subBtn&amp;#39;, function () { demo().then((obj) =&amp;gt; { $.ajax({ url: &amp;#34;../&amp;#34;, // url位置  type: &amp;#34;POST&amp;#34;, contentType: &amp;#34;application/json&amp;#34;, data: JSON.stringify(obj),// 輸入的資料  success: function (response) { }//  }); }); }); 使用FileReader來讀取上傳的檔案
因為readAsDataURL是非同步讀取
若不做非同步等待處理
檔案還未處理完就會被Post出去造成傳遞不到正確資料
故需將函式套上async並await等候所有檔案都處理完
const demo = async () =&amp;gt; { var obj = {}; var filearray = []; var file_name = []; let files = $(&amp;#34;input[name=upload_file]&amp;#34;)[0].files; for (let i = 0; i &amp;lt; files.</description>
    </item>
    
    <item>
      <title>MVC-檔案上傳Post</title>
      <link>https://hushuuu.github.io/2021/03/25/mvc-%E6%AA%94%E6%A1%88%E4%B8%8A%E5%82%B3post/</link>
      <pubDate>Thu, 25 Mar 2021 10:44:23 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2021/03/25/mvc-%E6%AA%94%E6%A1%88%E4%B8%8A%E5%82%B3post/</guid>
      <description>FormPost 如果要用FormPost的方式上傳檔案
注意將Form的Content-Type 設定為enctype=&amp;quot;multipart/form-data&amp;quot;
&amp;lt;input type=&amp;quot;file&amp;quot; accept=&amp;quot;.png, .jpg, .jpeg&amp;quot; name=&amp;quot;Filedata&amp;quot; class=&amp;quot;btn btn-default&amp;quot; /&amp;gt;
FormDataPost到後端後可以這樣來接收
public ActionResult Create(HttpPostedFileBase Filedata) { //可利用正則式過濾副檔名 if (Filedata != null &amp;amp;&amp;amp; Regex.IsMatch(Path.GetExtension(Filedata.FileName), &amp;#34;^[.](jpg|png|jpeg|gif|bmp)$&amp;#34;, RegexOptions.IgnoreCase)) { //存到資料夾  string tmpPath1 = Server.MapPath(&amp;#34;~/Images/&amp;#34;); if (!Directory.Exists(tmpPath1)) Directory.CreateDirectory(tmpPath1); var FileName = Path.GetFileName(Filedata.FileName); var FilePath = Path.Combine(Server.MapPath(&amp;#34;~/Images/&amp;#34;), FileName); Filedata.SaveAs(FilePath); string save_path = &amp;#34;/Images/&amp;#34; + FileName; pcm.pic_path = save_path; } } XMLHttpRequest上傳 建立FormData利用XMLHttpRequest發出請求
監聽上傳事件可顯示出上傳進度
//上傳檔案 var file = null; $(&amp;#39;#Filedata1&amp;#39;)[0].addEventListener(&amp;#39;change&amp;#39;, readFile, false); function readFile() { file = this.</description>
    </item>
    
  </channel>
</rss>
