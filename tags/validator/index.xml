<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Validator on The Site</title>
    <link>https://hushuuu.github.io/tags/validator/</link>
    <description>Recent content in Validator on The Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 15 Mar 2021 09:03:12 +0800</lastBuildDate><atom:link href="https://hushuuu.github.io/tags/validator/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>asp.net MVC 後端Model欄位驗證</title>
      <link>https://hushuuu.github.io/2021/03/15/asp.net-mvc-%E5%BE%8C%E7%AB%AFmodel%E6%AC%84%E4%BD%8D%E9%A9%97%E8%AD%89/</link>
      <pubDate>Mon, 15 Mar 2021 09:03:12 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2021/03/15/asp.net-mvc-%E5%BE%8C%E7%AB%AFmodel%E6%AC%84%E4%BD%8D%E9%A9%97%E8%AD%89/</guid>
      <description>前言 說明幾種Model Binding驗證欄位的方法。
包含正則式，長度限制，必填，自訂驗證。
主要內容 以下面例子 account 的欄位的驗證
StringLength() 長度限制
RegularExpression() 利用正則式
Required 必要欄位
CheckAccount 則為自訂的驗證
[Display(Name = &amp;#34;帳號&amp;#34;)] [StringLength(20)] [RegularExpression(@&amp;#34;[a-zA-Z0-9]*$&amp;#34;, ErrorMessage = &amp;#34;帳號僅能有英文或數字&amp;#34;)] [Required] [CheckAccount(ErrorMessage = &amp;#34;重複&amp;#34;)] public string account { get; set; } 自訂驗證部分可以建立一個類別繼承ValidationAttribute，再複寫 `IsValid方法
public class CheckAccountAttribute : ValidationAttribute { protected override ValidationResult IsValid(object value, ValidationContext validationContext) { //return base.IsValid(value, validationContext);  if (value != null) { if (/*條件式*/) { return new ValidationResult(FormatErrorMessage(validationContext.DisplayName)); } else { return ValidationResult.</description>
    </item>
    
  </channel>
</rss>
