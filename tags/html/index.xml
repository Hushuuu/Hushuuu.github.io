<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Html on The Site</title>
    <link>https://hushuuu.github.io/tags/html/</link>
    <description>Recent content in Html on The Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Aug 2023 10:38:45 +0800</lastBuildDate><atom:link href="https://hushuuu.github.io/tags/html/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Html之命名規則使用</title>
      <link>https://hushuuu.github.io/2023/08/17/html%E4%B9%8B%E5%91%BD%E5%90%8D%E8%A6%8F%E5%89%87%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Thu, 17 Aug 2023 10:38:45 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2023/08/17/html%E4%B9%8B%E5%91%BD%E5%90%8D%E8%A6%8F%E5%89%87%E4%BD%BF%E7%94%A8/</guid>
      <description>前言 HTML裡在變數或屬性的命名因人而異有不同習慣
如駝峰式camelCase=&amp;gt;userId
如串燒式kebab-case=&amp;gt;user-id
但要注意以下兩點
 html大小寫不敏感所以一般使用kebab-case命名，然後在javascript取屬性值會轉為camelCase 在vue-template也可以使用cameCcase但不建議  &amp;lt;div id=&amp;#34;a&amp;#34; data-user-id=123/&amp;gt; &amp;lt;script&amp;gt; console.log(document.querySelector(&amp;#39;#a&amp;#39;).dataset.userId); //123 &amp;lt;/script&amp;gt; 延伸-Vue 屬性Prop
&amp;lt;template :user-id=&amp;#34;&amp;#39;123&amp;#39;&amp;#34;/&amp;gt; &amp;lt;script setup&amp;gt; const props = defineProps({ userId: String, }) console.log(props.userId); // 123 &amp;lt;/script&amp;gt; 模板Template
可用首字母大寫PascalCase或kebab-case引入
PascalCase定義組件，在template使用兩種寫法都可以
但kebab-case定義則template只可使用kebab-case
import MenuComponent from &amp;#39;@/components/MenuComponent.vue&amp;#39; components: { &amp;#39;menu-component&amp;#39;: MenuComponent, MenuComponent }, &amp;lt;template&amp;gt; &amp;lt;MenuComponent /&amp;gt; &amp;lt;!--only PascalCase --&amp;gt; &amp;lt;menu-component /&amp;gt; &amp;lt;!--PascalCase or kebab-case --&amp;gt; &amp;lt;/template&amp;gt; </description>
    </item>
    
    <item>
      <title>MVC-包含明細的儲存</title>
      <link>https://hushuuu.github.io/2021/03/16/mvc-%E5%8C%85%E5%90%AB%E6%98%8E%E7%B4%B0%E7%9A%84%E5%84%B2%E5%AD%98/</link>
      <pubDate>Tue, 16 Mar 2021 15:50:53 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2021/03/16/mvc-%E5%8C%85%E5%90%AB%E6%98%8E%E7%B4%B0%E7%9A%84%E5%84%B2%E5%AD%98/</guid>
      <description>前言 在一對多的資料表下，一個表頭會對應好幾筆的明細
開發儲存明細時，該如何實現。
主要內容 若要新增資料要包含新增多筆明細。
可以在新增頁上建立一個Table
並進行新增一筆及刪除一筆的行為
最後儲存時在將table進行post回去的處理
一種方法是在畫面上讓使用者挑選輸入明細
輸入完畢塞一筆進html的table
&amp;lt;p&amp;gt;&amp;lt;h4&amp;gt;訂單明細&amp;lt;/h4&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;div class=&amp;#34;choseProd&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;col-md-12&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;col-md-2&amp;#34;&amp;gt; &amp;lt;h5&amp;gt;選擇商品至明細&amp;lt;/h5&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;col-md-2&amp;#34;&amp;gt; @Html.DropDownList(&amp;#34;ChoseProd&amp;#34;, Model.AllProducts, new { @class = &amp;#34;form-control&amp;#34; }) &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;col-md-1&amp;#34;&amp;gt; @Html.EditorFor(m =&amp;gt; m.QtyForSel, new { htmlAttributes = new { @class = &amp;#34;form-control&amp;#34;, @Min = &amp;#34;0&amp;#34; } }) &amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;col-md-4&amp;#34;&amp;gt; &amp;lt;button class=&amp;#34;btn btn-default&amp;#34; id=&amp;#34;addBtn&amp;#34; type=&amp;#34;button&amp;#34;&amp;gt;新增&amp;lt;/button&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;/div&amp;gt; 新增按鈕呼叫applist()AJAX POST查詢商品價格後回傳
串接HTML(顯示欄位+隱藏的Input欄位)
Append到明細Table
function applist() { var chosepod = $(&amp;#34;#ChoseProd&amp;#34;).</description>
    </item>
    
    <item>
      <title>MVC-Table排序與分頁</title>
      <link>https://hushuuu.github.io/2021/03/16/mvc-table%E6%8E%92%E5%BA%8F%E8%88%87%E5%88%86%E9%A0%81/</link>
      <pubDate>Tue, 16 Mar 2021 14:43:46 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2021/03/16/mvc-table%E6%8E%92%E5%BA%8F%E8%88%87%E5%88%86%E9%A0%81/</guid>
      <description>前言 前端有很多實用的table套件如DataTable.js可以直接實現排序換頁搜尋
本篇主要練習如何手動刻出類似的功能。
分頁 分頁的概念為設定一頁需顯示幾筆，再將資料分為幾等分來決定
要顯示第幾頁的資料，根據資料庫的種類用 Rownum Limit等
還可以用LinQ Skip() Take()
var list = query.Skip(startIndex).Take(pageSize).toList(); //舉例一頁顯示10筆，要顯示第3頁的資料  //Skip前兩頁的資料 =&amp;gt; 10*2  //Skip 20筆 Take 10筆 分頁導覽列 傳回前端的資料除了這十筆，也需要將分頁的資訊傳入進行判斷
page當前頁數 EndPage最後頁 TotalItemCount總筆數等
建立導覽列
if (page == 1) { &amp;lt;a class=&amp;#34;btn-default btn-sm disabled&amp;#34; id=&amp;#34;last_btn&amp;#34;&amp;gt;上頁&amp;lt;/a&amp;gt; } else { int nextnum = page - 1; &amp;lt;a class=&amp;#34;btn-default btn-sm&amp;#34; id=&amp;#34;last_btn&amp;#34; href=&amp;#34;@url?page=@nextnum&amp;#34;&amp;gt;上頁&amp;lt;/a&amp;gt; } if (page == Endpage) { &amp;lt;a class=&amp;#34;btn-default btn-sm disabled&amp;#34; id=&amp;#34;next_btn&amp;#34;&amp;gt;下頁&amp;lt;/a&amp;gt; } else { int nextnum = page + 1; &amp;lt;a class=&amp;#34;btn-default btn-sm&amp;#34; id=&amp;#34;next_btn&amp;#34; href=&amp;#34;@url?</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://hushuuu.github.io/2019/03/11/markdown-syntax-guide/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://hushuuu.github.io/2019/03/11/markdown-syntax-guide/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
