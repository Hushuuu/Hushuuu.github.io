<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Json on The Site</title>
    <link>https://hushuuu.github.io/categories/json/</link>
    <description>Recent content in Json on The Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 17 Feb 2022 08:40:41 +0800</lastBuildDate><atom:link href="https://hushuuu.github.io/categories/json/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Text.Json 客製JsonConverter</title>
      <link>https://hushuuu.github.io/2022/02/17/text.json-%E5%AE%A2%E8%A3%BDjsonconverter/</link>
      <pubDate>Thu, 17 Feb 2022 08:40:41 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2022/02/17/text.json-%E5%AE%A2%E8%A3%BDjsonconverter/</guid>
      <description>主要內容 建立類別繼承JsonConverter來掛在要轉換的屬性上
public class OnlyDateConverter : JsonConverter&amp;lt;DateTime&amp;gt; { public override DateTime Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) { //Debug.Assert(typeToConvert == typeof(DateTime));  return DateTime.Parse(reader.GetString()); } public override void Write(Utf8JsonWriter writer, DateTime value, JsonSerializerOptions options) { writer.WriteStringValue(value.ToString(&amp;#34;yyyy-MM-dd&amp;#34;)); } } public class DateWithTimeConverter : JsonConverter&amp;lt;DateTime&amp;gt; { public override DateTime Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options) { return DateTime.Parse(reader.GetString()); } public override void Write(Utf8JsonWriter writer, DateTime value, JsonSerializerOptions options) { writer.WriteStringValue(value.ToString(&amp;#34;yyyy-MM-dd HH:mm:ss&amp;#34;)); } } 掛載至屬性</description>
    </item>
    
  </channel>
</rss>
