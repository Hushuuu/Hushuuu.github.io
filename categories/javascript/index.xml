<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on The Site</title>
    <link>https://hushuuu.github.io/categories/javascript/</link>
    <description>Recent content in Javascript on The Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 26 Jan 2022 16:49:44 +0800</lastBuildDate><atom:link href="https://hushuuu.github.io/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>找出form input元素並處理值集合</title>
      <link>https://hushuuu.github.io/2022/01/26/%E6%89%BE%E5%87%BAform-input%E5%85%83%E7%B4%A0%E4%B8%A6%E8%99%95%E7%90%86%E5%80%BC%E9%9B%86%E5%90%88/</link>
      <pubDate>Wed, 26 Jan 2022 16:49:44 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2022/01/26/%E6%89%BE%E5%87%BAform-input%E5%85%83%E7%B4%A0%E4%B8%A6%E8%99%95%E7%90%86%E5%80%BC%E9%9B%86%E5%90%88/</guid>
      <description>前言 找出每個Input元素並串好值可以拿來提交表單或是ajax post
主要內容 常用input tag &amp;lt;form method=&amp;#34;post&amp;#34; id=&amp;#34;queryForm&amp;#34; action=&amp;#34;&amp;#34;&amp;gt; @Html.AntiForgeryToken() &amp;lt;input type=&amp;#34;color&amp;#34; name=&amp;#34;color&amp;#34; /&amp;gt; &amp;lt;input type=&amp;#34;checkbox&amp;#34; value=&amp;#34;1&amp;#34; name=&amp;#34;chks[0]&amp;#34; /&amp;gt; &amp;lt;input type=&amp;#34;checkbox&amp;#34; value=&amp;#34;2&amp;#34; name=&amp;#34;chks[1]&amp;#34; /&amp;gt; &amp;lt;input type=&amp;#34;range&amp;#34; name=&amp;#34;rng&amp;#34; /&amp;gt; &amp;lt;select multiple name=&amp;#34;selects&amp;#34;&amp;gt; &amp;lt;option value=&amp;#34;1&amp;#34;&amp;gt;A&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;2&amp;#34;&amp;gt;B&amp;lt;/option&amp;gt; &amp;lt;option value=&amp;#34;3&amp;#34;&amp;gt;C&amp;lt;/option&amp;gt; &amp;lt;/select&amp;gt; &amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;rdo&amp;#34; value=&amp;#34;10&amp;#34; /&amp;gt; &amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;rdo&amp;#34; value=&amp;#34;20&amp;#34; /&amp;gt; &amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;rdo&amp;#34; value=&amp;#34;30&amp;#34; /&amp;gt; &amp;lt;textarea name=&amp;#34;textarea&amp;#34;&amp;gt;&amp;lt;/textarea&amp;gt; &amp;lt;button type=&amp;#34;button&amp;#34; onclick=&amp;#34;ppTobk();&amp;#34;&amp;gt;submit&amp;lt;/button&amp;gt; &amp;lt;/form&amp;gt; 共用method /** * 將值集合轉成物件 * @@param paras 值集合 */ function paras_to_object(paras) { let obj = {}; for (let i = 0; i &amp;lt; paras.</description>
    </item>
    
    <item>
      <title>Js Note</title>
      <link>https://hushuuu.github.io/2021/10/13/js-note/</link>
      <pubDate>Wed, 13 Oct 2021 14:53:29 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2021/10/13/js-note/</guid>
      <description>Closure 閉包 和作用域有關係，可用來避免變數汙染
或讓變數不被隨意存取改變
用jQuery可簡易達成
$(function(){ //do your coding }); $(document).ready(function(){ }); 轉千分位 /** * 轉千分位 * @param {any} num */ function toCurrency(num) { var parts = num.toString().split(&amp;#39;.&amp;#39;); parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, &amp;#39;,&amp;#39;); return parts.join(&amp;#39;.&amp;#39;); } Date擴充 //增加日期 Date.prototype.addDays = function (days) { var date = new Date(this.valueOf()); date.setDate(date.getDate() + days); return date; } //轉為yyyy-MM-dd Date.prototype.toInputString = function () { let date = new Date(this.valueOf()); return date.toISOString().split(&amp;#39;T&amp;#39;)[0]; } </description>
    </item>
    
    <item>
      <title>Windowopen開新視窗並Post資料</title>
      <link>https://hushuuu.github.io/2021/10/04/windowopen%E9%96%8B%E6%96%B0%E8%A6%96%E7%AA%97%E4%B8%A6post%E8%B3%87%E6%96%99/</link>
      <pubDate>Mon, 04 Oct 2021 14:19:59 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2021/10/04/windowopen%E9%96%8B%E6%96%B0%E8%A6%96%E7%AA%97%E4%B8%A6post%E8%B3%87%E6%96%99/</guid>
      <description>前言 一般用window.open開窗傳遞參數常用get方式在url後方串接參數
若想用post方式，則在開窗前模擬form submit post
並在onsubmit前open。
主要內容 function openPostWindow(url, name, val1, val2) { var tempForm = document.createElement(&amp;#34;form&amp;#34;); tempForm.id = &amp;#34;tempForm1&amp;#34;; tempForm.method = &amp;#34;post&amp;#34;; tempForm.action = url; //url  tempForm.target = name; let hideInput = document.createElement(&amp;#34;input&amp;#34;); hideInput.type = &amp;#34;hidden&amp;#34;; hideInput.name = &amp;#34;val1&amp;#34;;//傳入引數名  hideInput.value = val1;//傳入資料  tempForm.appendChild(hideInput); let hideInput2 = document.createElement(&amp;#34;input&amp;#34;); hideInput2.type = &amp;#34;hidden&amp;#34;; hideInput2.name = &amp;#34;val2&amp;#34;; hideInput2.value = val2; tempForm.appendChild(hideInput2); tempForm.addEventListener(&amp;#39;onsubmit&amp;#39;, function () { openWindow(name);}) document.body.appendChild(tempForm); //手動submit form  tempForm.</description>
    </item>
    
    <item>
      <title>圖表套件使用-Chart js</title>
      <link>https://hushuuu.github.io/2021/05/03/%E5%9C%96%E8%A1%A8%E5%A5%97%E4%BB%B6%E4%BD%BF%E7%94%A8-chart-js/</link>
      <pubDate>Mon, 03 May 2021 13:59:47 +0800</pubDate>
      
      <guid>https://hushuuu.github.io/2021/05/03/%E5%9C%96%E8%A1%A8%E5%A5%97%E4%BB%B6%E4%BD%BF%E7%94%A8-chart-js/</guid>
      <description>前言 在使用套件時，根據環境跟使用，引入的script版本非常重要
版本不同有些使用的方式也會改變或是增減造成效果不一。
CDN
&amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.22.2/moment.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 主要內容 資料固定且簡單的範例只需引入後直接使用產生
&amp;lt;canvas id=&amp;#34;myChart&amp;#34;&amp;gt;&amp;lt;/canvas&amp;gt; &amp;lt;script&amp;gt; var ctx = document.getElementById(&amp;#34;myChart&amp;#34;); var chart = new Chart(ctx, { type: &amp;#39;bar&amp;#39;, data: { labels:{&amp;#34;A&amp;#34;,&amp;#34;B&amp;#34;,&amp;#34;C&amp;#34;}, datasets: [{ label: [&amp;#34;銷售量&amp;#34;], data: { &amp;#34;A&amp;#34;: &amp;#34;100&amp;#34;, &amp;#34;B&amp;#34;: &amp;#34;200&amp;#34;, &amp;#34;C&amp;#34;: &amp;#34;140&amp;#34; } }], } }) &amp;lt;/script&amp;gt; 非固定資料 可用Ajax撈回或使用PartialView的概念
&amp;lt;script&amp;gt; $(document).on(&amp;#39;click&amp;#39;, &amp;#39;#show_board&amp;#39;, function () { $.ajax({ type: &amp;#34;POST&amp;#34;, url: &amp;#39;@Url.Action(&amp;#34;ShowBoard&amp;#34;, &amp;#34;Product&amp;#34;)&amp;#39; }) .done(function (msg) { //後端傳回為json物件包含圖表所需的資料跟設定  var obj = msg; chart.data.datasets = obj.</description>
    </item>
    
  </channel>
</rss>
